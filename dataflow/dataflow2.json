{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MappingData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "LowerMidIncome1"
				},
				{
					"name": "HigherIncome1"
				},
				{
					"name": "UpperMiddleIncome1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "LowerMidIncome"
				},
				{
					"name": "HigherIncome"
				},
				{
					"name": "UpperMiddleIncome"
				}
			],
			"script": "source(output(\n\t\tTableName as string,\n\t\t{Country Code} as string,\n\t\tRegion as string,\n\t\tIncomeGroup as string,\n\t\tSpecialNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tTableName,\n\t\t{Country Code},\n\t\tRegion,\n\t\tIncomeGroup,\n\t\tSpecialNotes\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(equals({IncomeGroup}, \"LowerMidIncome\")) ~> LowerMidIncome\nSelect1 filter(equals({IncomeGroup}, \"HigherIncome\")) ~> HigherIncome\nSelect1 filter(equals({IncomeGroup}, \"UpperMiddleIncome\")) ~> UpperMiddleIncome\nLowerMidIncome sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LowerMidIncome1\nHigherIncome sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HigherIncome1\nUpperMiddleIncome sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UpperMiddleIncome1"
		}
	}
}