{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GDP",
						"type": "DatasetReference"
					},
					"name": "GDP"
				},
				{
					"dataset": {
						"referenceName": "MappingData",
						"type": "DatasetReference"
					},
					"name": "mappingdata"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Filter1"
				}
			],
			"script": "source(output(\n\t\t{Country Name} as string,\n\t\t{Indicator Name} as string,\n\t\t{2002} as long,\n\t\t{2003} as long,\n\t\t{2004} as long,\n\t\t{2005} as long,\n\t\t{2006} as long,\n\t\t{2007} as long,\n\t\t{2008} as long,\n\t\t{2009} as long,\n\t\t{2010} as long,\n\t\t{2011} as long,\n\t\t{2012} as long,\n\t\t{2013} as long,\n\t\t{2014} as long,\n\t\t{2015} as long,\n\t\t{2016} as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> GDP\nsource(output(\n\t\tTableName as string,\n\t\t{Country Code} as string,\n\t\tRegion as string,\n\t\tIncomeGroup as string,\n\t\tSpecialNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> mappingdata\nGDP, mappingdata join({Country Name} == TableName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(ERROR_FUNCTION('')) ~> Filter1"
		}
	}
}